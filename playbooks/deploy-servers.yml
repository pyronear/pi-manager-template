---
- name: Verify Ansible version and setup servers
  hosts: alert_server:alert_server_test:platform_server:openvpn:mediamtx
  become: true
  tasks:
    - name: Ensure Ansible version is 2.17 or higher
      ansible.builtin.assert:
        that:
          - ansible_version.minor | int >= 17
        fail_msg: "Ansible version must be 2.17 or higher."

  roles:
    - check_vars
    - common
    - docker

- name: Deploy Openvpn
  hosts: openvpn
  become: true
  roles:
    - pyronear.openvpn

- name: Deploy Mediamtx
  hosts: mediamtx
  become: true
  roles:
    - mediamtx


- name: Deploy Docker Compose Servers
  hosts: annotation_server
  become: true
  tasks:

    - name: Remove old api container manually
      community.docker.docker_container:
        name: annotation-api
        state: absent

    - name: Remove old app container manually
      community.docker.docker_container:
        name: annotation-app
        state: absent

    - name: Remove old api image manually
      community.docker.docker_image:
        name: pyronear/annotation-api
        state: absent

    - name: Remove old app image manually
      community.docker.docker_image:
        name: pyronear/annotation-app
        state: absent

- name: Deploy Docker Compose Servers
  hosts: alert_server
  become: true
  tasks:

    - name: Remove old api container manually
      community.docker.docker_container:
        name: api
        state: absent

    - name: Remove old api image manually
      community.docker.docker_image:
        name: pyronear/alert-api
        state: absent

- name: Deploy Docker Compose Servers
  hosts: platform_server
  become: true
  tasks:

    - name: Remove old api container manually
      community.docker.docker_container:
        name: platform
        state: absent

    - name: Remove old api image manually
      community.docker.docker_image:
        name: pyronear/pyro-platform
        state: absent

- name: Deploy Docker Compose Servers
  hosts: alert_server:alert_server_test:platform_server:annotation_server
  become: true
  roles:
    - servers

- name: Initialize tables and admin user
  hosts: alert_server:alert_server_test
  become: true
  tasks:
    - name: Check if 'user' table exists in PostgreSQL
      ansible.builtin.command: >
        sudo docker exec -t postgres psql -U {{ POSTGRES_USER }} -d {{ POSTGRES_DB }} -c
        "SELECT to_regclass('public.user');"
      register: check_user_table
      changed_when: false

    - name: Initialization
      ansible.builtin.command: sudo docker exec -ti api python app/db.py
      when: "'user' not in check_user_table.stdout"
      changed_when: false


- name: Deploy Docker Compose applications
  hosts: platform_server
  become: true
  serial: 1
  tasks:
    - name: Run client-specific tasks
      ansible.builtin.include_role:
        name: pyronear.openvpn
        tasks_from: install_client.yml

    - name: Remplacer 'redirect-gateway def1' par 'route 192.168.255.0 255.255.255.0'
      ansible.builtin.replace:
        path: /etc/openvpn/client.conf
        regexp: '^redirect-gateway def1$'
        replace: 'route 192.168.255.0 255.255.255.0'

    - name: Unconditionally reboot the machine with all defaults
      ansible.builtin.reboot:
